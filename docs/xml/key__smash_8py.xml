<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="key__smash_8py" kind="file" language="Python">
    <compoundname>key_smash.py</compoundname>
    <innerclass refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash" prot="public">hygia::data_pipeline::feature_engineering::key_smash::KeySmash</innerclass>
    <innernamespace refid="namespacehygia">hygia</innernamespace>
    <innernamespace refid="namespacehygia_1_1data__pipeline">hygia::data_pipeline</innernamespace>
    <innernamespace refid="namespacehygia_1_1data__pipeline_1_1feature__engineering">hygia::data_pipeline::feature_engineering</innernamespace>
    <innernamespace refid="namespacehygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash">hygia::data_pipeline::feature_engineering::key_smash</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>statistics<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>mean</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash" kindref="compound">KeySmash</ref>:</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">for<sp/>calculating<sp/>metrics<sp/>to<sp/>indicate<sp/>key<sp/>smashing<sp/>behavior<sp/>in<sp/>a<sp/>text.</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>Key<sp/>smashing<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>the<sp/>act<sp/>of<sp/>typing<sp/>on<sp/>a<sp/>keyboard<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>a<sp/>rapid<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>uncontrolled<sp/>manner,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>often<sp/>resulting<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>a<sp/>series<sp/>of<sp/>random<sp/>characters<sp/>being<sp/>entered<sp/>into<sp/>a<sp/>document<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>text<sp/>field.</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>Examples</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>--------</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>Use<sp/>this<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">like<sp/>this:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_smash<sp/>=<sp/><ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash" kindref="compound">KeySmash</ref>()</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>key_smash.extract_key_smash_features(df,<sp/></highlight><highlight class="stringliteral">&quot;text_column&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(df)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1abaf990cf994cfa58ac61d7188e9db461" kindref="member">char_sets</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vowels&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;aeiouáéíóúãõ&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;consonants&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;bcdfghjklmnñpqrstvwxyz&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;special_characters&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;!@#$%^¨|\&apos;\&quot;&amp;*()_+:;~`´]}{[}ºª=-.¿¡&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a682baee004b60c551f63c877a3270b3a" kindref="member">average_of_char_count_squared</ref>(self,<sp/>text:str)<sp/>-&gt;<sp/>float:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>takes<sp/>a<sp/>string<sp/>text<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>input<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>splits<sp/>it<sp/>into<sp/>words.</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>each<sp/>word,<sp/>it<sp/>counts<sp/>the<sp/>number<sp/>of<sp/>occurrences<sp/>of<sp/>each<sp/>character<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>word,<sp/>squares<sp/>those<sp/>counts,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>then<sp/>sums<sp/>them.</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>then<sp/>divides<sp/>the<sp/>sum<sp/>by<sp/>the<sp/>length<sp/>of<sp/>the<sp/>word<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>appends<sp/>the<sp/>result<sp/>to<sp/>a<sp/>list<sp/>words_results.</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Finally,<sp/>it<sp/>returns<sp/>the<sp/>mean<sp/>of<sp/>the<sp/>words_results<sp/>list,<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>list<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>empty,<sp/>otherwise<sp/>it<sp/>returns<sp/>0.</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>text:<sp/>The<sp/>text<sp/>to<sp/>use<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>calculation.</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>text:<sp/>str</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">:<sp/>The<sp/>calculated<sp/>Char<sp/>Frequency<sp/>Metric.</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>float</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Examples</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>this<sp/>function<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_smash<sp/>=<sp/><ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash" kindref="compound">KeySmash</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>key_smash.average_of_char_count_squared(</highlight><highlight class="stringliteral">&quot;PUENTECILLA<sp/>KM.<sp/>1.7&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(res)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Output:<sp/>1.121212121212121</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>key_smash.average_of_char_count_squared(</highlight><highlight class="stringliteral">&quot;ASDASD<sp/>XXXX&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(res)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Output:<sp/>3.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.lower()</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>re.sub(r&apos;\s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>text)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words_results<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words<sp/>=<sp/>text.split(</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>words:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(word)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>char<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>set(word):</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_count<sp/>+=<sp/>word.count(char)<sp/>**<sp/>2</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words_results.append(char_count<sp/>/<sp/>len(word))</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>words_results:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum(words_results)<sp/>/<sp/>len(words_results)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a02080ee2e117a12c68b2749b5946734e" kindref="member">count_sequence_squared</ref>(self,<sp/>text:str,<sp/>opt:str)<sp/>-&gt;<sp/>float:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>takes<sp/>a<sp/>text<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>opt<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>input.<sp/>It<sp/>checks<sp/>a<sp/>set<sp/>of<sp/>characters,<sp/>converts<sp/>text<sp/>to<sp/>lowercase,<sp/>iterates<sp/>through<sp/>characters,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increments<sp/>counter<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>finds<sp/>a<sp/>sequence<sp/>of<sp/>characters<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>set,<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>it<sp/>adds<sp/>square<sp/>of<sp/>counter<sp/>to<sp/>a<sp/>list,<sp/>resets<sp/>counter<sp/>to<sp/>1.</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>After<sp/>iterating<sp/>it<sp/>returns<sp/>sum<sp/>of<sp/>list<sp/>divided<sp/>by<sp/>length<sp/>of<sp/>text.</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>text:<sp/>The<sp/>text<sp/>to<sp/>use<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>calculation.</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>text:<sp/>str</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>opt:<sp/>The<sp/>type<sp/>of<sp/>characters<sp/>to<sp/>consider<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>calculation,<sp/>can<sp/>be<sp/>one<sp/>of<sp/></highlight><highlight class="stringliteral">&apos;vowels&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;consonants&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;special_characters&apos;</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>opt:<sp/>str</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">:<sp/>The<sp/>calculated<sp/>Irregular<sp/>Sequence<sp/>Metric.</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>float</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Examples</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>this<sp/>function<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_smash<sp/>=<sp/><ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash" kindref="compound">KeySmash</ref>()</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>key_smash.count_sequence_squared(</highlight><highlight class="stringliteral">&quot;PUENTECILLA<sp/>KM.<sp/>1.7&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vowels&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(res)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Output:<sp/>0.21052631578947367</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>key_smash.count_sequence_squared(</highlight><highlight class="stringliteral">&quot;ASDASD<sp/>XXXX&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;consonants&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(res)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Output:<sp/>2.1818181818181817</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>key_smash.count_sequence_squared(</highlight><highlight class="stringliteral">&quot;!@#$%<sp/>ASDFGHJKL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;special_characters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(res)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Output:<sp/>1.5625</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.lower()</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_sequence<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequences<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_set<sp/>=<sp/>self.<ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1abaf990cf994cfa58ac61d7188e9db461" kindref="member">char_sets</ref>[opt]</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(text)<sp/>-<sp/>1):</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text[i]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>char_set<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>text[i<sp/>+<sp/>1]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>char_set:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_sequence<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>count_sequence<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequences.append(count_sequence<sp/>**<sp/>2)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_sequence<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>count_sequence<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequences.append(count_sequence<sp/>**<sp/>2)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum(sequences)<sp/>/<sp/>len(text)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a43cd9f4f2e7bbb1797eea22d0c545f67" kindref="member">ratio_of_numeric_digits_squared</ref>(self,<sp/>text:str)<sp/>-&gt;<sp/>float:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>takes<sp/>text<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>input,<sp/>splits<sp/>it<sp/>into<sp/>a<sp/>list<sp/>of<sp/>words,<sp/>initializes<sp/>a<sp/>variable<sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>iterates<sp/>through<sp/>list<sp/>of<sp/>words,<sp/>checking<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>each<sp/>word<sp/>contains<sp/>both<sp/>numeric<sp/>digits<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>non-numeric<sp/>characters.</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>yes,<sp/>it<sp/>counts<sp/>number<sp/>of<sp/>numeric<sp/>digits,<sp/>squares<sp/>it<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>adds<sp/>to<sp/>variable.</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>returns<sp/>the<sp/>value<sp/>of<sp/>that<sp/>variable<sp/>divided<sp/>by<sp/>length<sp/>of<sp/>original<sp/>text,<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>list<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>empty<sp/>it<sp/>returns<sp/>0.</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>text:<sp/>The<sp/>text<sp/>to<sp/>extract<sp/>the<sp/>metric<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>text:<sp/>str</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">:<sp/>The<sp/>calculated<sp/>Number<sp/>Count<sp/>Metric.</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>float</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Examples</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>this<sp/>function<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_smash<sp/>=<sp/><ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash" kindref="compound">KeySmash</ref>()</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>key_smash.ratio_of_numeric_digits_squared(</highlight><highlight class="stringliteral">&quot;ABC<sp/>123<sp/>!@#&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(res)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Output:<sp/>0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>key_smash.ratio_of_numeric_digits_squared(</highlight><highlight class="stringliteral">&quot;ABC123<sp/>!@#&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(res)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Output:<sp/>0.9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.lower()</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_list<sp/>=<sp/>text.split()</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_of_numeric_digits<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>text_list:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>any(c.isdigit()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>word)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>any(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>c.isdigit()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>word):</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_of_numeric_digits<sp/>+=<sp/>len([c<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c.isdigit()])<sp/>**<sp/>2</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>text_list:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_of_numeric_digits<sp/>/<sp/>len(</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join(text_list))</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1afc42a4b6aa51c24fad51e85f0c269fd2" kindref="member">_normalize_column</ref>(self,<sp/>df:<sp/>pd.DataFrame,<sp/>column:<sp/>str)<sp/>-&gt;<sp/>pd.DataFrame:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Normalize<sp/>a<sp/>given<sp/>column<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>a<sp/>dataframe.</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>df:<sp/>Dataframe<sp/>to<sp/>normalize<sp/>the<sp/>column<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>df:<sp/>pandas.DataFrame</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>column:<sp/>Name<sp/>of<sp/>the<sp/>column<sp/>to<sp/>be<sp/>normalized.</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>column:<sp/>str</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">:<sp/>The<sp/>input<sp/>dataframe<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>normalized<sp/>column.</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>pandas.DataFrame</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>df[column]<sp/><sp/>/<sp/>df[column].abs().max()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>df[column].abs().max()<sp/>!=<sp/>0.0<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>0.0</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1ab736e6cfbbdc324b493778627318f41e" kindref="member">extract_key_smash_features</ref>(self,<sp/>df:pd.DataFrame,<sp/>column_name:str,<sp/>normalize:bool=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/>-&gt;<sp/>pd.DataFrame:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Extract<sp/>key<sp/>smash<sp/>features<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>a<sp/>given<sp/>dataframe<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>column.</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>df:<sp/>Dataframe<sp/>to<sp/>extract<sp/>key<sp/>smash<sp/>features<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>df:<sp/>pandas.DataFrame</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>column_name:<sp/>Name<sp/>of<sp/>the<sp/>column<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>dataframe<sp/>that<sp/>contains<sp/>the<sp/>text<sp/>data<sp/>to<sp/>extract<sp/>features<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>column_name:<sp/>str</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>normalize:<sp/>Indicates<sp/>whether<sp/>to<sp/>normalize<sp/>the<sp/>key<sp/>smash<sp/>feature<sp/>columns.<sp/>Default<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>normalize:<sp/>bool,<sp/>optional</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">:<sp/>The<sp/>input<sp/>dataframe<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>additional<sp/>columns<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key<sp/>smash<sp/>features:<sp/></highlight><highlight class="stringliteral">&apos;irregular_sequence_vowels&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;irregular_sequence_consonants&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;irregular_sequence_special_characters&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;number_count_metric&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;char_frequency_metric&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>pandas.DataFrame</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Examples</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>this<sp/>function<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_smash<sp/>=<sp/><ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash" kindref="compound">KeySmash</ref>()</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>pd.DataFrame({</highlight><highlight class="stringliteral">&quot;text_column&quot;</highlight><highlight class="normal">:<sp/>[</highlight><highlight class="stringliteral">&quot;abcdefgh&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ijklmnop&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;qrstuvwxyz&quot;</highlight><highlight class="normal">]})</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>key_smash.extract_key_smash_features(df,<sp/></highlight><highlight class="stringliteral">&quot;text_column&quot;</highlight><highlight class="normal">,<sp/>normalize=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(df.head())</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df[f&apos;feature_ks_count_sequence_squared_vowels_{column_name}&apos;</highlight><highlight class="normal">]<sp/>=<sp/>df[column_name].fillna(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).apply(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>self.<ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a02080ee2e117a12c68b2749b5946734e" kindref="member">count_sequence_squared</ref>(x,<sp/></highlight><highlight class="stringliteral">&apos;vowels&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(x)<sp/>&gt;<sp/>0<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>0.0)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df[f</highlight><highlight class="stringliteral">&apos;feature_ks_count_sequence_squared_consonants_{column_name}&apos;</highlight><highlight class="normal">]<sp/>=<sp/>df[column_name].fillna(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).apply(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>self.<ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a02080ee2e117a12c68b2749b5946734e" kindref="member">count_sequence_squared</ref>(x,<sp/></highlight><highlight class="stringliteral">&apos;consonants&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(x)<sp/>&gt;<sp/>0<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>0.0)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df[f</highlight><highlight class="stringliteral">&apos;feature_ks_count_sequence_squared_special_characters_{column_name}&apos;</highlight><highlight class="normal">]<sp/>=<sp/>df[column_name].fillna(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).apply(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>self.<ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a02080ee2e117a12c68b2749b5946734e" kindref="member">count_sequence_squared</ref>(x,<sp/></highlight><highlight class="stringliteral">&apos;special_characters&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(x)<sp/>&gt;<sp/>0<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>0.0)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df[f</highlight><highlight class="stringliteral">&apos;feature_ks_ratio_of_numeric_digits_squared_{column_name}&apos;</highlight><highlight class="normal">]<sp/>=<sp/>df[column_name].fillna(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).apply(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>self.<ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a43cd9f4f2e7bbb1797eea22d0c545f67" kindref="member">ratio_of_numeric_digits_squared</ref>(x)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(x)<sp/>&gt;<sp/>0<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>0.0)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df[f</highlight><highlight class="stringliteral">&apos;feature_ks_average_of_char_count_squared_{column_name}&apos;</highlight><highlight class="normal">]<sp/>=<sp/>df[column_name].fillna(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).apply(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>self.<ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a682baee004b60c551f63c877a3270b3a" kindref="member">average_of_char_count_squared</ref>(x)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(x)<sp/>&gt;<sp/>0<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>0.0)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>normalize:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_smash_columns<sp/>=<sp/>[f</highlight><highlight class="stringliteral">&apos;feature_ks_count_sequence_squared_vowels_{column_name}&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;feature_ks_count_sequence_squared_consonants_{column_name}&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;feature_ks_count_sequence_squared_special_characters_{column_name}&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;feature_ks_ratio_of_numeric_digits_squared_{column_name}&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;feature_ks_average_of_char_count_squared_{column_name}&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>column<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>key_smash_columns:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df[column]<sp/>=<sp/>self.<ref refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1afc42a4b6aa51c24fad51e85f0c269fd2" kindref="member">_normalize_column</ref>(df,<sp/>column)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>df</highlight></codeline>
    </programlisting>
    <location file="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py"/>
  </compounddef>
</doxygen>
