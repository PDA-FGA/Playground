<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash" kind="class" language="Python" prot="public">
    <compoundname>hygia::data_pipeline::feature_engineering::key_smash::KeySmash</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1abaf990cf994cfa58ac61d7188e9db461" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hygia.data_pipeline.feature_engineering.key_smash.KeySmash::char_sets</definition>
        <argsstring></argsstring>
        <name>char_sets</name>
        <qualifiedname>hygia.data_pipeline.feature_engineering.key_smash.KeySmash.char_sets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" line="27" column="1" bodyfile="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a65214ed127cf6a6491b1f249618e626d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def hygia.data_pipeline.feature_engineering.key_smash.KeySmash.__init__</definition>
        <argsstring>(self)</argsstring>
        <name>__init__</name>
        <qualifiedname>hygia.data_pipeline.feature_engineering.key_smash.KeySmash.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Initialize the KeySmash class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" line="23" column="1" bodyfile="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" bodystart="23" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a682baee004b60c551f63c877a3270b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition> float hygia.data_pipeline.feature_engineering.key_smash.KeySmash.average_of_char_count_squared</definition>
        <argsstring>(self, str text)</argsstring>
        <name>average_of_char_count_squared</name>
        <qualifiedname>hygia.data_pipeline.feature_engineering.key_smash.KeySmash.average_of_char_count_squared</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>str</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>The function takes a string text as input and splits it into words. </para>
        </briefdescription>
        <detaileddescription>
<para>For each word, it counts the number of occurrences of each character in the word, squares those counts, and then sums them. It then divides the sum by the length of the word and appends the result to a list words_results. Finally, it returns the mean of the words_results list, if the list is not empty, otherwise it returns 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>(Type: str) The text to use for the calculation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(Type: float) The calculated Char Frequency Metric.</para>
</simplesect>
Examples - Use this function like this:</para>
<para><programlisting filename=".py"><codeline><highlight class="normal">key_smash<sp/>=<sp/>KeySmash()</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">res<sp/>=<sp/>key_smash.average_of_char_count_squared(</highlight><highlight class="stringliteral">&quot;PUENTECILLA<sp/>KM.<sp/>1.7&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">print(res)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>Output:<sp/>1.121212121212121</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">res<sp/>=<sp/>key_smash.average_of_char_count_squared(</highlight><highlight class="stringliteral">&quot;ASDASD<sp/>XXXX&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">print(res)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>Output:<sp/>3.0</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" line="33" column="1" bodyfile="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" bodystart="33" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a02080ee2e117a12c68b2749b5946734e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition> float hygia.data_pipeline.feature_engineering.key_smash.KeySmash.count_sequence_squared</definition>
        <argsstring>(self, str text, str opt)</argsstring>
        <name>count_sequence_squared</name>
        <qualifiedname>hygia.data_pipeline.feature_engineering.key_smash.KeySmash.count_sequence_squared</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>str</type>
          <declname>text</declname>
        </param>
        <param>
          <type>str</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
<para>This function takes a text and opt as input. </para>
        </briefdescription>
        <detaileddescription>
<para>It checks a set of characters, converts text to lowercase, iterates through characters, increments counter if finds a sequence of characters in set, if not it adds square of counter to a list, resets counter to 1. After iterating it returns sum of list divided by length of text.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>(Type: str) The text to use for the calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opt</parametername>
</parameternamelist>
<parameterdescription>
<para>(Type: str) The type of characters to consider for the calculation, can be one of &apos;vowels&apos;, &apos;consonants&apos;, or &apos;special_characters&apos;.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(Type:float) The calculated Irregular Sequence Metric.</para>
</simplesect>
Examples - Use this function like this:</para>
<para><programlisting filename=".py"><codeline><highlight class="normal">key_smash<sp/>=<sp/>KeySmash()</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">res<sp/>=<sp/>key_smash.count_sequence_squared(</highlight><highlight class="stringliteral">&quot;PUENTECILLA<sp/>KM.<sp/>1.7&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vowels&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">print(res)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>Output:<sp/>0.21052631578947367</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">res<sp/>=<sp/>key_smash.count_sequence_squared(</highlight><highlight class="stringliteral">&quot;ASDASD<sp/>XXXX&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;consonants&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">print(res)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>Output:<sp/>2.1818181818181817</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">res<sp/>=<sp/>key_smash.count_sequence_squared(</highlight><highlight class="stringliteral">&quot;!@#$%<sp/>ASDFGHJKL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;special_characters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">print(res)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>Output:<sp/>1.5625</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" line="75" column="1" bodyfile="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" bodystart="75" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a43cd9f4f2e7bbb1797eea22d0c545f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition> float hygia.data_pipeline.feature_engineering.key_smash.KeySmash.ratio_of_numeric_digits_squared</definition>
        <argsstring>(self, str text)</argsstring>
        <name>ratio_of_numeric_digits_squared</name>
        <qualifiedname>hygia.data_pipeline.feature_engineering.key_smash.KeySmash.ratio_of_numeric_digits_squared</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>str</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>This function takes text as input, splits it into a list of words, initializes a variable to 0. </para>
        </briefdescription>
        <detaileddescription>
<para>It iterates through list of words, checking if each word contains both numeric digits and non-numeric characters. If yes, it counts number of numeric digits, squares it and adds to variable. It returns the value of that variable divided by length of original text, if the list is empty it returns 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>(Type: str) The text to extract the metric from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(Type: float) The calculated Number Count Metric.</para>
</simplesect>
Examples - Use this function like this:</para>
<para><programlisting filename=".py"><codeline><highlight class="normal">key_smash<sp/>=<sp/>KeySmash()</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">res<sp/>=<sp/>key_smash.ratio_of_numeric_digits_squared(</highlight><highlight class="stringliteral">&quot;ABC<sp/>123<sp/>!@#&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">print(res)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>Output:<sp/>0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">res<sp/>=<sp/>key_smash.ratio_of_numeric_digits_squared(</highlight><highlight class="stringliteral">&quot;ABC123<sp/>!@#&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">print(res)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>Output:<sp/>0.9</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" line="124" column="1" bodyfile="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" bodystart="124" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a203a70c5924e1a618e48e797fbcb4c18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pd.DataFrame</type>
        <definition> pd.DataFrame hygia.data_pipeline.feature_engineering.key_smash.KeySmash.extract_key_smash_features</definition>
        <argsstring>(self, pd.DataFrame df, str column_name)</argsstring>
        <name>extract_key_smash_features</name>
        <qualifiedname>hygia.data_pipeline.feature_engineering.key_smash.KeySmash.extract_key_smash_features</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>pd.DataFrame</type>
          <declname>df</declname>
        </param>
        <param>
          <type>str</type>
          <declname>column_name</declname>
        </param>
        <briefdescription>
<para>Extract key smash features from a given dataframe and column. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>(Type: DataFrame) Dataframe to extract key smash features from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>column_name</parametername>
</parameternamelist>
<parameterdescription>
<para>(Type: str) Name of the column in the dataframe that contains the text data to extract features from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>(bool, optional) Indicates whether to normalize the key smash feature columns. Default is True.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(Type: DataFrame) The input dataframe with additional columns for key smash features: &apos;irregular_sequence_vowels&apos;, &apos;irregular_sequence_consonants&apos;, &apos;irregular_sequence_special_characters&apos;, &apos;number_count_metric&apos;, &apos;char_frequency_metric&apos;</para>
</simplesect>
Examples Use this function like this:</para>
<para><programlisting filename=".py"><codeline><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline><highlight class="normal">key_smash<sp/>=<sp/>KeySmash()</highlight></codeline>
<codeline><highlight class="normal">df<sp/>=<sp/>pd.DataFrame({</highlight><highlight class="stringliteral">&quot;text_column&quot;</highlight><highlight class="normal">:<sp/>[</highlight><highlight class="stringliteral">&quot;abcdefgh&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ijklmnop&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;qrstuvwxyz&quot;</highlight><highlight class="normal">]})</highlight></codeline>
<codeline><highlight class="normal">df<sp/>=<sp/>key_smash.extract_key_smash_features(df,<sp/></highlight><highlight class="stringliteral">&quot;text_column&quot;</highlight><highlight class="normal">,<sp/>normalize=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">print(df.head())</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" line="176" column="1" bodyfile="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" bodystart="176" bodyend="205"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1afc42a4b6aa51c24fad51e85f0c269fd2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pd.DataFrame</type>
        <definition> pd.DataFrame hygia.data_pipeline.feature_engineering.key_smash.KeySmash._normalize_column</definition>
        <argsstring>(self, pd.DataFrame df, str column)</argsstring>
        <name>_normalize_column</name>
        <qualifiedname>hygia.data_pipeline.feature_engineering.key_smash.KeySmash._normalize_column</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>pd.DataFrame</type>
          <declname>df</declname>
        </param>
        <param>
          <type>str</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Normalize a given column in a dataframe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>(Type: DataFrame) Dataframe to normalize the column in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>(Type: str) Name of the column to be normalized.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(Type: DataFrame) The input dataframe with the normalized column. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" line="164" column="1" bodyfile="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" bodystart="164" bodyend="175"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class for calculating metrics to indicate key smashing behavior in a text. </para>
    </briefdescription>
    <detaileddescription>
<para>Key smashing is the act of typing on a keyboard in a rapid and uncontrolled manner, often resulting in a series of random characters being entered into a document or text field.</para>
<para>Examples - Use this class like this:</para>
<para><programlisting filename=".py"><codeline><highlight class="normal">key_smash<sp/>=<sp/>KeySmash()</highlight></codeline>
<codeline><highlight class="normal">df<sp/>=<sp/>key_smash.extract_key_smash_features(df,<sp/></highlight><highlight class="stringliteral">&quot;text_column&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">print(df)</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" line="5" column="1" bodyfile="/Users/alvesisaque/workspace/Playground/hygia/data_pipeline/feature_engineering/key_smash.py" bodystart="5" bodyend="205"/>
    <listofallmembers>
      <member refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a65214ed127cf6a6491b1f249618e626d" prot="public" virt="non-virtual"><scope>hygia::data_pipeline::feature_engineering::key_smash::KeySmash</scope><name>__init__</name></member>
      <member refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1afc42a4b6aa51c24fad51e85f0c269fd2" prot="protected" virt="non-virtual"><scope>hygia::data_pipeline::feature_engineering::key_smash::KeySmash</scope><name>_normalize_column</name></member>
      <member refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a682baee004b60c551f63c877a3270b3a" prot="public" virt="non-virtual"><scope>hygia::data_pipeline::feature_engineering::key_smash::KeySmash</scope><name>average_of_char_count_squared</name></member>
      <member refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1abaf990cf994cfa58ac61d7188e9db461" prot="public" virt="non-virtual"><scope>hygia::data_pipeline::feature_engineering::key_smash::KeySmash</scope><name>char_sets</name></member>
      <member refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a02080ee2e117a12c68b2749b5946734e" prot="public" virt="non-virtual"><scope>hygia::data_pipeline::feature_engineering::key_smash::KeySmash</scope><name>count_sequence_squared</name></member>
      <member refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a203a70c5924e1a618e48e797fbcb4c18" prot="public" virt="non-virtual"><scope>hygia::data_pipeline::feature_engineering::key_smash::KeySmash</scope><name>extract_key_smash_features</name></member>
      <member refid="classhygia_1_1data__pipeline_1_1feature__engineering_1_1key__smash_1_1_key_smash_1a43cd9f4f2e7bbb1797eea22d0c545f67" prot="public" virt="non-virtual"><scope>hygia::data_pipeline::feature_engineering::key_smash::KeySmash</scope><name>ratio_of_numeric_digits_squared</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
