<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="main_8py" kind="file" language="Python">
    <compoundname>main.py</compoundname>
    <innernamespace refid="namespacehygia">hygia</innernamespace>
    <innernamespace refid="namespacehygia_1_1main">hygia::main</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>colorama<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Fore,<sp/>Back</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>hygia<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PreProcessData</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>hygia<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>FeatureEngineering</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>hygia<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>RandomForestModel</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>hygia<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>AnnotateData</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacehygia_1_1parser_1_1model__parser" kindref="compound">hygia.parser.model_parser</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ModelParser</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacehygia_1_1parser_1_1_y_a_m_l__parser" kindref="compound">hygia.parser.YAML_parser</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>YAMLParser</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacehygia_1_1parser_1_1pre__processing__parser" kindref="compound">hygia.parser.pre_processing_parser</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PreProcessingParser</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacehygia_1_1parser_1_1feature__engineering__parser" kindref="compound">hygia.parser.feature_engineering_parser</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>FeatureEngineeringParser</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacehygia_1_1parser_1_1annotate__data__parser" kindref="compound">hygia.parser.annotate_data_parser</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>AnnotateDataParser</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">run_with_config(yaml_path:<sp/>str):</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>initialParser<sp/>=<sp/>YAMLParser</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>preProcessingParser<sp/>=<sp/>PreProcessingParser</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>preProcessData<sp/>=<sp/>PreProcessData()</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>featureEngineeringParser<sp/>=<sp/>FeatureEngineeringParser</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>featureEngineering<sp/>=<sp/>FeatureEngineering</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>annotateDataParser<sp/>=<sp/>AnnotateDataParser</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>annotateData<sp/>=<sp/>AnnotateData</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>modelParser<sp/>=<sp/>ModelParser</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>randomForestModel<sp/>=<sp/>RandomForestModel</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>config<sp/>=<sp/>initialParser(yaml_path).parse()</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>data<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>config[</highlight><highlight class="stringliteral">&apos;data_path&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>csv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separator<sp/>=<sp/>config[</highlight><highlight class="stringliteral">&apos;separator&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoding<sp/>=<sp/>config[</highlight><highlight class="stringliteral">&apos;encoding&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>engine<sp/>=<sp/>config[</highlight><highlight class="stringliteral">&apos;engine&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows<sp/>=<sp/>config[</highlight><highlight class="stringliteral">&apos;nrows&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>pd.read_csv(data,<sp/>sep=separator,<sp/>engine=engine,<sp/>encoding=encoding,<sp/>nrows=nrows)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results<sp/>=<sp/>pd.DataFrame()</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;{Fore.MAGENTA}------<sp/>HYGIA<sp/>------{Fore.WHITE}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Pre<sp/>processing<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(30*</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;{Back.WHITE<sp/>}{Fore.BLACK}Running<sp/>PRE<sp/>PROCESSING...{Back.BLACK<sp/>}{Fore.WHITE}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns_name<sp/>=<sp/>list(df.columns)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns_set,<sp/>columns_name<sp/>=<sp/>preProcessingParser(columns_name).parse(config[</highlight><highlight class="stringliteral">&apos;pre_processing&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>columns<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>columns_set:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key,<sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>columns.items():</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>preProcessData.pre_process_data(df,<sp/>value,<sp/>key)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Feature<sp/>engineering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(30*</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;{Back.WHITE<sp/>}{Fore.BLACK}Running<sp/>FEATURE<sp/>ENGINEERING...{Back.BLACK<sp/>}{Fore.WHITE}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features_configs,<sp/>columns_alias<sp/>=<sp/>featureEngineeringParser(columns_name).parse(config[</highlight><highlight class="stringliteral">&apos;feature_engineering&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>feature_config<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>features_configs:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_columns<sp/>=<sp/>feature_config[</highlight><highlight class="stringliteral">&apos;columns&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lang<sp/>=<sp/>feature_config[</highlight><highlight class="stringliteral">&apos;data_lang&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>column<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>feature_columns:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimensions<sp/>=<sp/>feature_config[</highlight><highlight class="stringliteral">&apos;dimensions&apos;</highlight><highlight class="normal">][column]</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>preProcessData.handle_nulls(df,<sp/>column)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>featureEngineering(lang=lang,<sp/>dimensions=dimensions).extract_features(df,<sp/>column)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Annotate<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(30*</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;{Back.WHITE<sp/>}{Fore.BLACK}Running<sp/>ANNOTATE<sp/>DATA...{Back.BLACK<sp/>}{Fore.WHITE}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>annotate_data_configs<sp/>=<sp/>annotateDataParser().parse(config[</highlight><highlight class="stringliteral">&apos;annotate_data&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>annotate_data_config<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>annotate_data_configs:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>annotate_data_config[</highlight><highlight class="stringliteral">&apos;columns&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>column<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>columns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thresholds<sp/>=<sp/>annotate_data_config[</highlight><highlight class="stringliteral">&apos;thresholds&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>annotateData().<ref refid="namespaceannotate__data" kindref="compound">annotate_data</ref>(df,<sp/>column,<sp/>thresholds)<sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(30*</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;{Back.WHITE<sp/>}{Fore.BLACK}Running<sp/>MODEL<sp/>(KEYBOARD-SMASH)...{Back.BLACK<sp/>}{Fore.WHITE}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_configs<sp/>=<sp/>modelParser(columns_alias).parse(config[</highlight><highlight class="stringliteral">&apos;model&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>model_config<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>model_configs:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_columns<sp/>=<sp/>model_config[</highlight><highlight class="stringliteral">&apos;columns&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trained_model_file<sp/>=<sp/>model_config[</highlight><highlight class="stringliteral">&apos;trained_model_file&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>column<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>model_columns:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features_columns<sp/>=<sp/>[col<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>col<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>df<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col.startswith(</highlight><highlight class="stringliteral">&apos;feature_ks&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>col.startswith(</highlight><highlight class="stringliteral">&apos;feature_we&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>col.startswith(</highlight><highlight class="stringliteral">&apos;feature_re&apos;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>col.endswith(column)]</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randomForest<sp/>=<sp/>randomForestModel(trained_model_file)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>randomForest.train_and_get_scores(df,<sp/>column,<sp/>features_columns)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results[column]<sp/>=<sp/>df[column]</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results[f</highlight><highlight class="stringliteral">&apos;prediction_{column}&apos;</highlight><highlight class="normal">]<sp/>=<sp/>randomForest.predict(df[features_columns].values)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(config[</highlight><highlight class="stringliteral">&apos;output_folder&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_folder<sp/>=<sp/>config[</highlight><highlight class="stringliteral">&apos;output_folder&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results[results[f</highlight><highlight class="stringliteral">&apos;prediction_{column}&apos;</highlight><highlight class="normal">]<sp/>==<sp/>1]<sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.loc[:,<sp/>results.columns.str.endswith(column)]<sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.to_csv(f</highlight><highlight class="stringliteral">&apos;{output_folder}prediction_{column}.csv&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(30*</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;{Fore.GREEN}exporting<sp/>to<sp/>{output_folder}prediction_{column}.csv{Fore.WHITE}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>config[</highlight><highlight class="stringliteral">&apos;pre_processing&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>config[</highlight><highlight class="stringliteral">&apos;feature_engineering&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>config[</highlight><highlight class="stringliteral">&apos;annotate_data&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>config[</highlight><highlight class="stringliteral">&apos;model&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results</highlight></codeline>
    </programlisting>
    <location file="/Users/alvesisaque/workspace/Playground/hygia/main.py"/>
  </compounddef>
</doxygen>
